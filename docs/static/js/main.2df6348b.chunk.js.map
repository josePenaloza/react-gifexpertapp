{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KA0B9C,OAEI,sBAAMC,SApBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAclB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SA5BkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGdC,EAHc,iDAGmCC,UAAUH,GAH7C,+DAKDI,MAAOF,GALN,cAKdG,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZrB,kBAkBbM,GAlBa,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAKA,EAAL,WCHCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAyBtC,OAhBAC,qBAAU,WACN1B,EAASC,GACD0B,MAAM,SAAAC,GAKFH,EAAS,CACbjB,KAAMoB,EACNL,SAAS,SAKhB,CAAEtB,IAEAuB,EDjB2BK,CAAa5B,GAAjCa,EANuB,EAM7BN,KAAce,EANe,EAMfA,QAMtB,OAEI,qCACA,qBAAIJ,UAAU,oCAAd,eAAqDlB,EAArD,OAECsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEUL,EAAOJ,KAAK,SAAAC,GAAG,OAEjB,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEzBbkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAa9B,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BACI6C,EAAWrB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAUA,GADHA,Y,MCtBvB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2df6348b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n         if(inputValue.trim().length > 2){\r\n\r\n            setCategories( cats =>[ inputValue, ...cats  ]);\r\n            setinputValue('');\r\n\r\n\r\n        }\r\n\r\n        //setCategories( cats =>[ ...cats, inputValue ]);\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    return (\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=8vk9sSdsxOOgBe99SB2j9pT4gmRhfALT`;\r\n\r\n   const resp = await fetch( url );\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map( img => {\r\n      return{\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url\r\n\r\n      }\r\n\r\n   })\r\n\r\n   return gifs;\r\n  \r\n\r\n\r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url }) => {\r\n\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n     \r\n    /*const [images, setImages] = useState( [] )\r\n */\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">  {category} </h3>\r\n\r\n       { loading && <p className=\"animate__animated animate__flash\">Loading</p>  }\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n                { images.map( img => (\r\n                \r\n                <GifGridItem \r\n                key={ img.id}\r\n                { ...img} />\r\n\r\n            )) \r\n            } \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import  { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n               .then( imgs => {\r\n                   \r\n               \r\n\r\n\r\n                    setstate({\r\n                data: imgs,\r\n                loading: false\r\n               }); \r\n   \r\n                \r\n            })\r\n      }, [ category ])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    \r\n\r\n   /**  const handleAdd = () =>{\r\n        //setcategories( ['hunter  x', ...categories]);\r\n        setcategories( cats =>[ ...cats, 'hunter  x' ]);\r\n\r\n    }*/\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Los medios gifs</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n           \r\n\r\n            <ol>{\r\n                categories.map( category => (\r\n                <GifGrid \r\n                key = {category }\r\n                category={category } />\r\n                ))\r\n\r\n            }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n \n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}